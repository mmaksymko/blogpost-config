spring:
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    open-in-view: false
  kafka:
    consumer:
      group-id: blog-post-service-group-id
      auto-offset-reset: earliest

  datasource:
    driverClassName: org.postgresql.Driver
    username: "{cipher}a48d50252a10796cf8001207d1a316d7e4b77f3698ae9cdb16dace41165562b8"
    password: "{cipher}8a3fcfeea4fbcc07cf746d4b24fccc3f5a6eb92a413c0c03fd43646b7f3884b5"

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true

resilience4j:
  retry:
    instances:
      retry-post:
        max-attempts: 3
        wait-duration: 1s
        record-exceptions:
          - org.springframework.dao.DataAccessResourceFailureException
          - org.springframework.dao.QueryTimeoutException
          - org.springframework.dao.CannotAcquireLockException
          - org.springframework.dao.DeadlockLoserDataAccessException
  ratelimiter:
    instances:
      rate-limit-post:
        timeout-duration: 0s
        limit-refresh-period: 5s
        limit-for-period: 2

server:
  port: 8081
